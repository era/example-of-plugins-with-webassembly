// src/lib.rs

// Use a procedural macro to generate bindings for the world we specified in
// our wit file
wit_bindgen::generate!("plugin");

// Define a custom type and implement the generated `Plugin` trait for it which
// represents implementing all the necessary exported interfaces for this
// component.
struct HelloWorld;

impl Plugin for HelloWorld {
    fn run(name: String) -> String {
        format!("Hello, {name}")
    }
}

// The following macro is generated by wit-bindgen and is always named `export_{world_name}`
export_plugin!(HelloWorld);